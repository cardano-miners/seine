use utxorpc::spec::sync::BlockRef;

pub const TUNA_V1_ADDRESS: &[u8] = &[
    0x71, 0x27, 0x9f, 0x84, 0x2c, 0x33, 0xee, 0xd9, 0x05, 0x4b, 0x9e, 0x3c, 0x70, 0xcd, 0x6a, 0x3b,
    0x32, 0x29, 0x82, 0x59, 0xc2, 0x4b, 0x78, 0xb8, 0x95, 0xcb, 0x41, 0xd9, 0x1a,
];

pub const TUNA_V1_POLICY_ID: &[u8] = &[
    0x27, 0x9f, 0x84, 0x2c, 0x33, 0xee, 0xd9, 0x05, 0x4b, 0x9e, 0x3c, 0x70, 0xcd, 0x6a, 0x3b, 0x32,
    0x29, 0x82, 0x59, 0xc2, 0x4b, 0x78, 0xb8, 0x95, 0xcb, 0x41, 0xd9, 0x1a,
];

pub const TUNA_V2_ADDRESS: &[u8] = &[0x71];

pub const TUNA_V2_POLICY_ID: &[u8] = &[];

pub fn initial_point() -> BlockRef {
    BlockRef {
        index: 101511762,
        hash: vec![
            0xc8, 0xb1, 0x3b, 0xb9, 0x7f, 0x53, 0x87, 0xb9, 0x99, 0x6b, 0x18, 0x08, 0x32, 0x58,
            0x59, 0x1b, 0x47, 0x52, 0x7a, 0x8f, 0x4a, 0xb6, 0x5b, 0x33, 0x94, 0xb2, 0x48, 0xb8,
            0xb0, 0xa0, 0xb2, 0xf7,
        ]
        .into(),
    }
}
